{"version":3,"sources":["reportWebVitals.js","helpers/API.js","components/trending-news.jsx","components/trending-bilibili.jsx","components/trending-baidu.jsx","components/sentiment.jsx","components/body.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","tokenizer","WordTokenizer","natural","API","SpellCorrector","request","get","result","JSON","parse","text","lang","standardisedText","aposToLexForm","toLowerCase","replace","tokenizedReview","tokenize","filteredReview","SW","removeStopwords","SentimentAnalyzer","PorterStemmer","getSentiment","trendingNews","props","state","articles","api","this","getTopNews","setState","alert","article","img","urlToImage","src","href","url","title","description","Date","publishedAt","toDateString","map","makeArticleDiv","Component","trendingBilibili","trends","trend","short_link","getTrendingOnBilibili","console","error","makeTrendDiv","trendingBaidu","hotNews","link","getBaiduHotNews","sentiment","makeNewsDiv","sentimentCallback","document","getElementById","innerText","getTextSentiment","isNaN","addEventListener","id","getSentimentGraphic","toFixed","parseFloat","className","alt","handle","body","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bb22c193.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import request from 'superagent';\nimport natural from 'natural';\nimport aposToLexForm from 'apos-to-lex-form';\nimport SpellCorrector from 'spelling-corrector';\nimport SW from 'stopword';\nconst { WordTokenizer } = natural;\nconst tokenizer = new WordTokenizer();\nconst spellCorrector = new SpellCorrector();\n\nclass API {\n\n    constructor() {\n        // spellCorrector.loadDictionary();\n    }\n\n    async getTopNews() {\n        try {\n            const query = \"https://what-up-china-server.herokuapp.com/top-news/\";\n            const result = await request.get(query);\n            return JSON.parse(result.text);\n        } catch (e) {\n            return e;\n        }\n    }\n\n    async getTrendingOnBilibili() {\n        try {\n            const query = \"https://what-up-china-server.herokuapp.com/bilibili/trending/\";\n            const result = await request.get(query);\n            return JSON.parse(result.text);\n        } catch (e) {\n            return e;\n        }\n    }\n\n    async getBaiduHotNews() {\n        try {\n            const query = \"https://what-up-china-server.herokuapp.com/baidu/hot-news/\";\n            const result = await request.get(query);\n            return JSON.parse(result.text);\n        } catch (e) {\n            return e;\n        }\n    }\n\n    getTextSentiment(text, lang) {\n        const standardisedText = aposToLexForm(text).toLowerCase().replace(/[^a-zA-Z\\s]+/g, '');\n        const tokenizedReview = tokenizer.tokenize(standardisedText);\n        // tokenizedReview.forEach((word, index) => {\n        //     tokenizedReview[index] = spellCorrector.correct(word);\n        // });\n        const filteredReview = SW.removeStopwords(tokenizedReview);\n        const { SentimentAnalyzer, PorterStemmer } = natural;\n        // NB: the original language is in Chinese and is later translated by the user into other languages\n        const language = lang || 'English';\n        const analyzer = new SentimentAnalyzer(language, PorterStemmer, 'afinn');\n\n        return analyzer.getSentiment(filteredReview);\n    }\n\n}\n\nexport default API;\n","import React, { Component } from 'react';\nimport API from '../helpers/API';\n\nclass trendingNews extends Component {\n\n    state = {\n        articles: []\n    }\n\n    constructor(props) {\n        super(props);\n        this.props = props;\n        this.api = new API();\n    }\n\n    async componentDidMount() {\n        try {\n            const articles = await this.api.getTopNews();\n            this.setState({ articles: articles });\n        } catch (e) {\n            alert(e);\n        }\n    }\n\n    makeArticleDiv(article) {\n        let img = \"\";\n        if(article.urlToImage != null) {\n            img = <img src={`https://${article.urlToImage.replace(\"http://\", \"\").replace(\"https://\", \"\")}`}/>\n        }\n        return <div>\n            <h2><a href={article.url}>{article.title}</a></h2>\n            <p>{article.description}</p>\n            {img}\n            <p>{new Date(article.publishedAt).toDateString()}</p>\n        </div>\n    }\n\n    render() {\n        return (<div>\n            {this.state.articles.map((article) => { return this.makeArticleDiv(article) })}\n        </div>);\n    }\n\n}\n\nexport default trendingNews;\n","import React, { Component } from 'react';\nimport API from '../helpers/API';\n\nclass trendingBilibili extends Component {\n\n    state = {\n        trends: []\n    }\n\n    constructor(props) {\n        super(props);\n        this.props = props;\n        this.api = new API();\n    }\n\n    makeTrendDiv(trend) {\n        return <div>\n            <h2><a href={trend.short_link}>{trend.title}</a></h2>\n            {/*<img src={`https://${trend.pic.replace(\"http://\", \"\").replace(\"https://\", \"\")}`}/>*/}\n            {/*<p>{new Date(trend.pubdate).toDateString()}</p>*/}\n        </div>\n    }\n\n    async componentDidMount() {\n        try {\n            const trends = await this.api.getTrendingOnBilibili();\n            this.setState({ trends: trends });\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n\n    render() {\n        return (<div>\n            {this.state.trends.map((trend) => { return this.makeTrendDiv(trend) })}\n        </div>);\n    }\n\n}\n\nexport default trendingBilibili;\n","import React, { Component } from 'react';\nimport API from '../helpers/API';\n\nclass trendingBaidu extends Component {\n\n    state = {\n        hotNews: []\n    }\n\n    constructor(props) {\n        super(props);\n        this.props = props;\n        this.api = new API();\n    }\n\n    makeNewsDiv(article) {\n        return <div>\n            <h2><a href={article.link}>{article.title}</a></h2>\n        </div>\n    }\n\n    async componentDidMount() {\n        try {\n            const hotNews = await this.api.getBaiduHotNews();\n            this.setState({ hotNews: hotNews });\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n\n    render() {\n        return (<div>\n            <h3>{this.state.sentiment}</h3>\n            {this.state.hotNews.map((article) => { return this.makeNewsDiv(article) })}\n        </div>);\n    }\n\n}\n\nexport default trendingBaidu;\n","import React, { Component } from 'react';\nimport API from '../helpers/API';\n\nclass sentiment extends Component {\n\n    state = {\n        sentiment: \"\"\n    }\n\n    constructor(props) {\n        super(props);\n        this.props = props;\n        this.api = new API();\n    }\n\n    componentDidMount() {\n        const sentimentCallback = () => {\n            // TODO this is pretty crude\n            const text = document.getElementById(\"results\").innerText\n                .replace(/[^a-z\\d\\s]+/gi,'')\n                .replace(\"Hot News Baidu\", \"\")\n                .replace(\"Trending News\", \"\")\n                .replace(\"Trending on Bilibili\", \"\");\n            const sentiment = this.api.getTextSentiment(text, \"English\");\n            if(!isNaN(sentiment)) {\n                this.setState({ sentiment: sentiment });\n            }\n        };\n        document.getElementById(\"baiduNewsButton\").addEventListener(\"click\", sentimentCallback, false);\n        document.getElementById(\"trendingNewsButton\").addEventListener(\"click\", sentimentCallback, false);\n        document.getElementById(\"trendingBilibiliButton\").addEventListener(\"click\", sentimentCallback, false);\n    }\n\n    handle() {\n        if(this.state.sentiment !== \"\") {\n            return <div id={\"sentiment\"}>\n                <h3>Sentiment (Beta)</h3>\n                {this.getSentimentGraphic()}\n                <h3><i>Score: {this.state.sentiment.toFixed(3)}</i></h3>\n            </div>;\n        }\n        return <div/>;\n    }\n\n    getSentimentGraphic() {\n        const sentiment = parseFloat(this.state.sentiment);\n        if(sentiment === 0) {\n            return <img className={\"faces\"} src={\"https://creazilla-store.fra1.digitaloceanspaces.com/emojis/55321/neutral-face-emoji-clipart-md.png\"} alt={\"neutral\"}/>\n        } else if (sentiment > 0) {\n            return <img className={\"faces\"} src={\"https://www.kindpng.com/picc/m/40-408571_original-smiley-face-png-images-clipart-roblox-smile.png\"} alt={\"happy\"}/>\n        } else {\n            return <img className={\"faces\"} src={\"https://lh3.googleusercontent.com/proxy/Rn2lCovR-IpwLM-0LkXrnUDVBngwHzdfWZ5Un1_o1aiCvuB3fjvlIm4AWaaKMg_BuClvOPXZvUjzjOodqIlsRA8Vx_UXsxc\"} alt={\"sad\"}/>\n        }\n    }\n\n\n    render() {\n        return (<div>\n            {this.handle()}\n        </div>);\n    }\n\n}\n\nexport default sentiment;\n","import React, { Component } from 'react';\nimport '../App.css';\nimport TrendingNews from \"./trending-news\";\nimport TrendingBilibili from \"./trending-bilibili\";\nimport TrendingBaidu from \"./trending-baidu\";\nimport Sentiment from \"./sentiment\";\n\nclass body extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n       return <div id={\"results\"}>\n            <Sentiment/>\n            <h2><a id={\"trendingBaidu\"}/>Hot News Baidu</h2>\n            <TrendingBaidu/>\n            <br/><br/>\n            <h2><a id={\"trendingNews\"}/>Trending News</h2>\n            <TrendingNews/>\n            <br/><br/>\n            <h2><a id={\"trendingBilibili\"}/>Trending on Bilibili</h2>\n            <TrendingBilibili/>\n       </div>;\n    }\n}\n\nexport default body;\n","import Body from \"./components/body\";\nimport React from \"react\";\n\nfunction App() {\n    return (\n        <div>\n            <Body />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport App from \"./App.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}