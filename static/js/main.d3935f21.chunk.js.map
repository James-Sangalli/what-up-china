{"version":3,"sources":["reportWebVitals.js","helpers/API.js","components/trending-news.jsx","components/body.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","API","request","get","result","JSON","parse","text","articles","article","toLangCode","this","translate","description","title","console","error","post","body","headers","Authorization","data","translations","translatedText","trendingNews","props","state","api","localisedArticles","getTopNews","localiseNewsArticle","push","setState","alert","img","urlToImage","src","href","url","publishedAt","map","makeArticleDiv","Component","id","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,0FCwCCQ,E,8OAzCkBC,IAAQC,IAAI,2F,cAA3BC,E,yBACCC,KAAKC,MAAMF,EAAOG,MAAMC,U,iQAMbC,EAASC,G,0FAECC,KAAKC,UAAUH,EAAQI,YAAaH,G,cAAhED,EAAQI,Y,gBACcF,KAAKC,UAAUH,EAAQK,MAAOJ,G,OAApDD,EAAQK,M,uDAERC,QAAQC,MAAR,M,iCAEGP,G,2LAGKF,EAAMG,G,gGAEOR,IAAQe,KAAR,2DAAyE,CAC1FC,KAAM,CACF,EAAKX,EACL,OAAU,KACV,OAAUG,EACV,OAAU,QAEdS,QAAS,CACL,eAAgB,mBAChBC,cAAe,a,cATjBhB,E,yBAaCA,EAAOiB,KAAKC,aAAaC,gB,uCAEhCR,QAAQC,MAAR,M,kBACOT,G,yHCUJiB,E,kDA1CX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IALVC,MAAQ,CACJlB,SAAU,IAKV,EAAKiB,MAAQA,EACb,EAAKE,IAAM,IAAI1B,EAHA,E,wMAQP2B,EAAoB,G,SACDjB,KAAKgB,IAAIE,a,OAA1BrB,E,qBACeA,G,gEAAXC,E,aAENmB,E,UAA6BjB,KAAKgB,IAAIG,oBAAoBrB,EAAS,M,yBAAjDsB,K,+JAEtBpB,KAAKqB,SAAS,CAAExB,SAAUoB,I,kDAE1BK,MAAM,EAAD,I,kKAKExB,GACX,IAAIyB,EAAM,GAIV,OAHyB,MAAtBzB,EAAQ0B,aACPD,EAAM,qBAAKE,IAAG,gBAAW3B,EAAQ0B,eAE9B,gCACH,6BAAI,mBAAGE,KAAM5B,EAAQ6B,IAAjB,SAAuB7B,EAAQK,UACnC,4BAAIL,EAAQI,cACXqB,EACD,4BAAIzB,EAAQ8B,mB,+BAIV,IAAD,OACL,OAAQ,8BACH5B,KAAKe,MAAMlB,SAASgC,KAAI,SAAC/B,GAAc,OAAO,EAAKgC,eAAehC,Y,GA1CpDiC,aCeZxB,E,kDAZX,WAAYO,GAAQ,uCACVA,G,qDAIP,OAAO,sBAAKkB,GAAI,UAAT,UACF,+CACA,cAAC,EAAD,W,GATOD,aCOJE,MARf,WACI,OACI,8BACI,cAAC,EAAD,OCCZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BzD,M","file":"static/js/main.d3935f21.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import request from 'superagent';\n\nclass API {\n\n    async getTopNews() {\n        try {\n            const result = await request.get(\"https://newsapi.org/v2/top-headlines?country=cn&apiKey=6d7709b0ec234faab6e438466941c2ae\");\n            return JSON.parse(result.text).articles;\n        } catch (e) {\n            return e;\n        }\n    }\n\n    async localiseNewsArticle(article, toLangCode) {\n        try {\n            article.description = await this.translate(article.description, toLangCode);\n            article.title = await this.translate(article.title, toLangCode);\n        } catch (e) {\n            console.error(e);\n        }\n        return article;\n    }\n\n    async translate(text, toLangCode) {\n        try {\n            const result = await request.post(`https://translation.googleapis.com/language/translate/v2`, {\n                body: {\n                    \"q\": text,\n                    \"source\": \"zh\",\n                    \"target\": toLangCode,\n                    \"format\": \"text\"\n                },\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: \"Bearer \" //TODO\n                }\n            });\n\n            return result.data.translations.translatedText;\n        } catch (e) {\n            console.error(e);\n            return text;\n        }\n    }\n\n}\n\nexport default API;\n","import React, { Component } from 'react';\nimport API from '../helpers/API';\n\nclass trendingNews extends Component {\n\n    state = {\n        articles: []\n    }\n\n    constructor(props) {\n        super(props);\n        this.props = props;\n        this.api = new API();\n    }\n\n    async componentDidMount() {\n        try {\n            let localisedArticles = [];\n            const articles = await this.api.getTopNews();\n            for(const article of articles) {\n                // TODO en for now but later read from the users browser\n                localisedArticles.push(await this.api.localiseNewsArticle(article, \"en\"));\n            }\n            this.setState({ articles: localisedArticles });\n        } catch (e) {\n            alert(e);\n        }\n    }\n\n    // TODO use translate on the article title and description\n    makeArticleDiv(article) {\n        let img = \"\";\n        if(article.urlToImage != null) {\n            img = <img src={`https:${article.urlToImage}`}/>\n        }\n        return <div>\n            <h2><a href={article.url}>{article.title}</a></h2>\n            <p>{article.description}</p>\n            {img}\n            <p>{article.publishedAt}</p>\n        </div>\n    }\n\n    render() {\n        return (<div>\n            {this.state.articles.map((article) => { return this.makeArticleDiv(article) })}\n        </div>);\n    }\n\n}\n\nexport default trendingNews;\n","import React, { Component } from 'react';\nimport '../App.css';\nimport TrendingNews from \"./trending-news\";\n\nclass body extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n       return <div id={\"results\"}>\n            <h2>Trending News</h2>\n            <TrendingNews/>\n       </div>;\n    }\n}\n\nexport default body;\n","import Body from \"./components/body\";\nimport React from \"react\";\n\nfunction App() {\n    return (\n        <div>\n            <Body />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport App from \"./App.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}